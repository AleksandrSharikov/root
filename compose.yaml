services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: Kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
  redis:
    image: redis:7.2.4
    hostname: redis
    container_name: redis
    ports:
      - 6379:6379
  bot:
    container_name: BOT
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "BotListener"
    depends_on:
      - kafka
  stat:
    build:
      context: ./stat
      dockerfile: Dockerfile
    container_name: stat
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "StatListener"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/postgres"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
    depends_on:
        - postgres
        - kafka
  tgb:
    build:
      context: ./tgprocessor
      dockerfile: Dockerfile
    container_name: TGB
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "TGBListener"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    depends_on:
      - kafka
      - redis
  user:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
      SPRING_KAFKA_CONSUMER_GROUP_ID: "UserListener"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/postgres"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
    depends_on:
      - postgres
      - kafka
